// Variables:
vars /globals
    UU global_counter = 0
    U title_num = 0
    U TITLE_LEN = len(titles) >> 5

charmap("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ#@-,'>!♥·")

data /titles
    [] titles
        ("···············2,1··············"
         "·············MARKOV·············")

data /backgrounds
    [] bg
        ("································"
         "································"
         "···········NOW·PLAYING··········"
         "································"
         "································"
         "································"
         "·····#####····#####·····@·······"
         "·····#####····#####····@@@······"
         "·····#####····#####····@@@······"
         "·····#####····#####···@@@@@·····"
         "·····#####····#####···@@@@@·····"
         "································"
         "································"
         "································"
         "································"
         "································"
         "································"
         "································"
         "································"
         "································"
         "································"
         "································"
         "································"
         "································"
         "································"
         "································"
         "································"
         "································"
         "································"
         "································")

fn load_bg()
    // Tell the NES which VRAM address we want to upload to:
    ppu_reset_addr($2000)

    // Upload the tile data:
    for UU i = 0; i < 960; i += 1
        {PPUDATA}(@bg{i})

    // Then the attributes:
    for U i = 0; i < 64; i += 1
        {PPUDATA}(%00000000)

fn draw_title()
    ppu_reset_addr($2080)
    for U i = 0; i < 32; i += 1
        {PPUDATA}(@titles[i + (title_num << 5)])


fn handle_input()
    // handle song change
    if pads[0].pressed & BUTTON_LEFT
        reset_audio()
        if title_num == 0
            title_num = TITLE_LEN - 1
        else
            title_num -= 1
    else if pads[0].pressed & BUTTON_RIGHT
        reset_audio()
        if title_num == TITLE_LEN - 1
            title_num = 0
        else
            title_num += 1

fn draw_shapes()
    ppu_reset_addr($2000)

nmi main_nmi()
    ppu_upload_oam_poll_pads(0)
    draw_title()
    write_u(sq1_vol, $21CE)
    ppu_reset_scroll(0, 0)
    global_counter += 1

mode main()
: nmi main_nmi
    palette = example_palette
    ppu_upload_palette()

    load_bg()
    draw_title()

    {PPUCTRL}(PPUCTRL_NMI_ON)
    {PPUMASK}(PPUMASK_ON | PPUMASK_NO_CLIP)
    {SND_CHN}(%111) // enable sq1/sq2/tri
    {SQ1_SWEEP}(0) // disable sweep
    {SQ2_SWEEP}(0) // disable sweep
    sq1_pitch = $10C
    set_sq1_pitch()
    while true
        update_pads()
        handle_input()
        update_eno()
        nmi

// Define the tileset (commonly called CHR):
chrrom
    file(fmt, "tiles.png")
    file(fmt, "tiles.png")
