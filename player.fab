// Variables:
vars /globals
    UU global_counter = 0
    UU scroll_x = 0
    U ppu_ctrl = PPUCTRL_NMI_ON


fn load_bg()
    // Tell the NES which VRAM address we want to upload to:
    ppu_reset_addr($2000)

    // Upload the tile data:
    for UU i = 0; i < 960; i += 1
        {PPUDATA}(@bg{i})

    // Then the attributes:
    for U i = 0; i < 64; i += 1
        {PPUDATA}(%00000000)

    // then blank
    for UU i = 0; i < 960; i += 1
        {PPUDATA}("Â·"[0])

    // Then the attributes again:
    for U i = 0; i < 64; i += 1
        {PPUDATA}(%00000000)

fn handle_input()

nmi main_nmi()
    ppu_upload_oam_poll_pads(0)
    // draw_title()
    scroll_x -= 2
    scroll_x &= $1FF
    ppu_ctrl = PPUCTRL_NMI_ON | scroll_x.b
    fence
    {PPUCTRL}(ppu_ctrl)
    fence
    global_counter += 1
    if global_counter == 4 || global_counter == 8
        draw_midi()
    if global_counter == 8
        global_counter = 0

    ppu_reset_scroll(scroll_x.a, 0)

mode main()
: nmi main_nmi
: employs /sound/buffer/globals
    palette = example_palette
    ppu_upload_palette()
    hide_oam(0)

    init_eno_voices()
    load_bg()

    fence
    {PPUCTRL}(ppu_ctrl)
    {PPUMASK}(PPUMASK_ON | PPUMASK_NO_CLIP)
    {SND_CHN}(%111) // enable sq1/sq2/tri
    {SQ1_SWEEP}(0) // disable sweep
    {SQ2_SWEEP}(0) // disable sweep
    fence
    while true
        update_pads()
        handle_input()
        update_eno()
        nmi

// Define the tileset (commonly called CHR):
chrrom
    file(fmt, "tiles.png")
    file(fmt, "tiles.png")
